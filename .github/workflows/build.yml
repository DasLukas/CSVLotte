name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=src/csvlotte --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-windows:
    needs: test
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyInstaller
    
    - name: Build executable
      run: |
        python embed_readme.py
        python build.py
    
    - name: Create ZIP archive
      run: |
        Compress-Archive -Path "dist/CSVLotte.exe" -DestinationPath "dist/CSVLotte-Windows.zip"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: csvlotte-windows
        path: |
          dist/CSVLotte.exe
          dist/CSVLotte-Windows.zip

  build-linux:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyInstaller
    
    - name: Build executable
      run: |
        python embed_readme.py
        python build.py
    
    - name: Create TAR archive
      run: |
        cd dist
        tar -czf CSVLotte-Linux.tar.gz CSVLotte
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: csvlotte-linux
        path: |
          dist/CSVLotte
          dist/CSVLotte-Linux.tar.gz

  build-macos:
    needs: test
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyInstaller
    
    - name: Build executable
      run: |
        python embed_readme.py
        python build.py
    
    - name: Create ZIP archive
      run: |
        cd dist
        zip -r CSVLotte-macOS.zip CSVLotte
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: csvlotte-macos
        path: |
          dist/CSVLotte
          dist/CSVLotte-macOS.zip

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: csvlotte-windows
        path: dist/windows/
    
    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: csvlotte-linux
        path: dist/linux/
    
    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: csvlotte-macos
        path: dist/macos/
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## CSVLotte Release ${{ github.ref_name }}
          
          Cross-platform CSV processing tool with GUI built in Python/Tkinter.
          
          ### Download Options
          
          **Windows:**
          - Download `CSVLotte-Windows.zip`
          - Extract and run `CSVLotte.exe`
          - Requirements: Windows 10 or later
          
          **Linux:**
          - Download `CSVLotte-Linux.tar.gz`
          - Extract: `tar -xzf CSVLotte-Linux.tar.gz`
          - Run: `./CSVLotte`
          - Requirements: Most Linux distributions
          
          **macOS:**
          - Download `CSVLotte-macOS.zip`
          - Extract and run `CSVLotte`
          - Requirements: macOS 10.15 or later
          
          ### Features
          - CSV file filtering and processing
          - Intuitive GUI interface
          - Cross-platform compatibility
          - No additional software installation required
          
          ### Installation
          No installation required - just download, extract, and run!
          
          ### Changes
          See commit history for detailed changes in this release.
        draft: false
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        files: |
          dist/windows/CSVLotte-Windows.zip
          dist/linux/CSVLotte-Linux.tar.gz
          dist/macos/CSVLotte-macOS.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
