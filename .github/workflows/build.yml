name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install PyInstaller
    
    - name: Build executable
      run: |
        python embed_readme.py
        python build.py
    
    - name: Create ZIP archive
      run: |
        Compress-Archive -Path "dist/CSVLotte.exe" -DestinationPath "dist/CSVLotte-Windows.zip"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: csvlotte-windows
        path: |
          dist/CSVLotte.exe
          dist/CSVLotte-Windows.zip
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## CSVLotte Release
          
          ### Changes
          - See commit history for detailed changes
          
          ### Download
          - Download `CSVLotte-Windows.zip` for the standalone executable
          - Extract and run `CSVLotte.exe`
          
          ### Requirements
          - Windows 10 or later
          - No additional software installation required
        draft: false
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/CSVLotte-Windows.zip
        asset_name: CSVLotte-Windows.zip
        asset_content_type: application/zip

  test:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=src/csvlotte --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
